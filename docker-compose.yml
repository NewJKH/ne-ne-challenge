services:
  app:
    image: ${DOCKERHUB_USERNAME}/my-spring-app:latest
    container_name: my-app
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      TOSS_SECRET_KEY: ${TOSS_SECRET_KEY}
      TOSS_CLIENT_KEY: ${TOSS_CLIENT_KEY}
      TOSS_BASE_URL: ${TOSS_BASE_URL}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_REDIRECT_URI: ${KAKAO_REDIRECT_URI}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
    volumes:
      - ./firebase-key.json:/app/firebase/firebase-key.json
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # 기본 Grafana 비밀번호 설정
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.0
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms1g -Xmx1g                # 메모리 2g → 1g로 줄임
      xpack.security.enabled: false              # 보완 설정
      xpack.security.http.ssl.enabled: false     # https 접속
      logger.level: WARN
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:9200/_cluster/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - es-config:/usr/share/elasticsearch/config
    networks:
      - search
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:9.1.0
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    volumes:
      - ./kibana:/app/kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVER_HOST: "0.0.0.0"
    networks:
      - search

volumes:
  redis-data:
  grafana_data:
  es-data:
  es-config:

networks:
  app-network:
    driver: bridge
  monitoring:
    driver: bridge
  search:
    driver: bridge