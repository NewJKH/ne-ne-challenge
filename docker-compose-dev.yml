version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dev-app
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      SPRING_REDIS_HOST: ${SPRING_REDIS_HOST}
      SPRING_REDIS_PORT: ${SPRING_REDIS_PORT}
      TOSS_SECRET_KEY: ${TOSS_SECRET_KEY}
      TOSS_CLIENT_KEY: ${TOSS_CLIENT_KEY}
      TOSS_BASE_URL: ${TOSS_BASE_URL}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_REDIRECT_URI: ${KAKAO_REDIRECT_URI}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
    volumes:
      - ./firebase-key.json:/app/firebase/firebase-key.json

  mysql:
    image: mysql:8
    container_name: dev-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: capital
    ports:
      - "3306:3306"
    volumes:
      - mysql-dev-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  mysql-dev-data:
  redis-dev-data:
